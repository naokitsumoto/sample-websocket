/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // The production code uses Guava
    compile 'com.google.guava:guava:20.0'
    compile 'org.glassfish.tyrus:tyrus-server:1.13.1'
    compile 'org.glassfish.tyrus:tyrus-client:1.13.1'
    compile 'org.glassfish.tyrus:tyrus-container-grizzly-server:1.13.1'


    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'App'
def executableBaseName = "websocket"

task execJar(type: Jar, dependsOn: jar)  {
    archiveName = "${executableBaseName}.jar"
    manifest {
        attributes 'Main-Class' : mainClassName
    }

    from configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
    from "$buildDir/classes/main"
    from "$buildDir/resources/main"
}

